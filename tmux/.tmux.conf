# start with defaults
# http://unix.stackexchange.com/a/255343
# Clear all bindings
unbind-key -a
# Load original defaults
source-file ~/.reset.tmux.conf

# Temporary workaround to remove notes flag -N
# See linked GH issue below
bind ? list-keys

# Can replace all of the above with:
# unbind-key -R
# Once this feature is added:
# https://github.com/tmux/tmux/issues/4063

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# remap prefix from 'C-b' to 'C-t'
# another popular choice is C-a
unbind C-b
set-option -g prefix C-t
bind-key C-t send-prefix

# Command mode with prefix t
# May choose another common task for t
bind t command-prompt
# Unbind old cmd prompt key
unbind :

# split panes using \ and -
# keep existing path
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# unbind old split commands
unbind '"'
unbind %

# Use current pane path for new windows
bind c new-window -c "#{pane_current_path}"

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

## No delay for escape key press
# No use for escape sequence after prefix,
# and this delay causes common commands to be missed
# More info here: https://mutelight.org/practical-tmux
set -sg escape-time 0

# config notes
# bind-key same as bind
# -n means no escape key required first - okay for modifier sequences
# -r to repeat
# -c for command mode. Seems impractical to have custom command mode bindings.
#    command mode entered with prefix :

# Pane select with vim motion
# Repeat usually not necessary
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# -r to repeat
# Resize with shift-vim
bind -r H resize-pane -L
bind -r L resize-pane -R
bind -r K resize-pane -U
bind -r J resize-pane -D

# Enable repeat for layout toggle
bind -r Space next-layout

# Enable repeat for next and previous window
bind -r n next-window
bind -r p previous-window

# Move windows
bind-key -r < swap-window -t -1 \; previous-window
bind-key -r > swap-window -t +1 \; next-window

# ----------- Non Prefix Bindings -----------"
# ctrl-arrow without prefix switch panes
bind -n C-Left         select-pane -L
bind -n C-Right        select-pane -R
bind -n C-Up           select-pane -U
bind -n C-Down         select-pane -D

# shift-arrow without prefix to resize
bind -n S-Left         resize-pane -L
bind -n S-Right        resize-pane -R
bind -n S-Up           resize-pane -U
bind -n S-Down         resize-pane -D

# alt-arrow without prefix to switch windows
bind -n M-Left         previous-window
bind -n M-Right        next-window

# alt-space without prefix for next-layout
bind -n m-space next-layout
# may require the following tweak to disable ubuntu handling:
#  sudo apt-get install compizconfig-settings-manager
#  compizconfig->general options->key bindings: window menu
# ----------- Non Prefix Bindings -----------"

# Vi mode keys, for search, etc
# https://github.com/tmux/tmux/wiki/Getting-Started#copy-mode-key-bindings
# https://github.com/tmux/tmux/wiki/Getting-Started#vi1-key-bindings
set -g status-keys vi
setw -g mode-keys vi

# Delete other arrow-based resize commands.
# Cleans-up key listing
unbind -T prefix Up
unbind -T prefix Down
unbind -T prefix Left
unbind -T prefix Right
unbind -T prefix M-Up
unbind -T prefix M-Down
unbind -T prefix M-Left
unbind -T prefix M-Right
unbind -T prefix C-Up
unbind -T prefix C-Down
unbind -T prefix C-Left
unbind -T prefix C-Right

# disable audible bell
set -g bell-action none

## Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on

# For limited number of colors:
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
# This should match what's returned by echo $TERM in parent shell.
# Note that parent shell should be something like xterm-256color, and not just xterm.
# Color test may still work in parent shell with just xterm, but tmux colors will be broken.
# Make sure that a colorful terminal is available. Ways to check are:
#  infocmp xterm-256color
# And it should exist under one of the paths here:
# infocmp -D
#  /lib/terminfo/x/xterm-256color
#  /usr/share/terminfo/x/xterm-256color
# In a docker container, if the file exists, but is not set,
# you can pass the env as an arg during container creation,
# but you can also manually set it within the current shell with:
# export TERM=xterm-256color

#set -g default-terminal screen-256color
set -g default-terminal xterm-256color
#set -g default-terminal xterm-256color-italic # Unnecessary, and causes problems
#set -g default-terminal tmux-256color

# For full RGB 24-bit color:
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour
# https://dandavison.github.io/delta/tips-and-tricks/using-delta-with-tmux.html
# For tmux 3.2 and beyond, you can use terminal-features instead of terminal-overrides
# set -ga terminal-features ",xterm-256color:Tc"
# But terminal-overrides should work for any tmux version (old and new):
set -ga terminal-overrides ",xterm-256color:Tc"
#set -ga terminal-overrides ",xterm-256color-italic:Tc" # Unnecessary.
# Test italics by running git diff with difftastic installed on a section
# of code containing comments.

set -g history-limit 10000

#setw -g mouse on
#setw -g monitor-activity on

# Status bar customization
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html

# Don't show session name
# default
# set -g status-left "[#S] "
set -g status-left ''

# default status-right
# set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
# No date / time
# set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\""
# Nothing, maximize space for window names
# set -g status-right ''

# Show RAM and CPU use
set -g status-interval 1
set -g status-right '#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -m 1 -t 1 -v -a 0 -c -i 1)'

# List of plugins:
set -g @plugin 'tmux-plugins/tmux-resurrect'
#  prefix + Ctrl-s - save
#  prefix + Ctrl-r - restore
set -g @plugin 'thewtex/tmux-mem-cpu-load'
#  This plugin requires cmake, which is installed in setup/apps.sh
#  But tmux will still work fine without it.

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
